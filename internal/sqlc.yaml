version: 1
packages:
    - path: "./usecase/repository"
      name: "db"
      engine: "postgresql"
      schema: "../migrations"
      queries: "./usecase/repository/queries"
      emit_json_tags: true
      json_tags_case_style: "camel"
      output_models_file_name: "entity"
      emit_empty_slices: true
      emit_all_enum_values: true
      output_db_file_name: "intfaces.go"
      overrides:
          - db_type: "decimal"
            go_type: "github.com/shopspring/decimal"
      emit_interface: true
#      emit_exact_table_name: false
#      emit_prepared_queries: false
#      emit_interfaces: false

#path: where to find the generated golang code
#name: name of the go package that should be generated
#schema: where to find the sql migrations
#queries: where the queries are stored
#emit_json_tags: add json to the generated structs
#emit_prepared_queries: generates code that works with prepared statements
#emit_exact_table_name: if false regularizes the struct names eg accounts -> account if set to false
#emit_empty_slices: if true instructs sqlc to return empty slices for listing data without rows

#Steps to running migrate
#migrate create -ext sql -dir db/migrations -seq init_schema

# The steps to running sql c
#1: sqlc init to create a yml file
#2: create the queries file
#3: run sqlc generate to create the entity structs and the crud operations repository
