{
    "swagger": "2.0",
    "info": {
        "description": "Illustration of uncle Bob's clean architecture using a demo blogs api.\nIt serves as Blog.",
        "title": "Gin Gonic golang Clean Architecture.",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "localhost:8089",
    "basePath": "/api/v1",
    "paths": {
        "/blogs/": {
            "get": {
                "description": "Show all blogs registered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blogs"
                ],
                "summary": "List all the Blogs",
                "operationId": "Fetch Blog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "1",
                        "name": "Page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "10",
                        "name": "ItemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blog_route.listBlogsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/blogs/create-blog/": {
            "post": {
                "description": "Create a blog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blogs"
                ],
                "summary": "Create a blog",
                "operationId": "Create a blog",
                "parameters": [
                    {
                        "description": "Create blog request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/blog_route.createBlogRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/blog_route.createBlogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/blogs/{id}": {
            "get": {
                "description": "Show a single blog registered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blogs"
                ],
                "summary": "Fetch single blog by ID",
                "operationId": "Single blog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "blog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blog_route.singleBlogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "blog_route.createBlogRequestBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "blog_route.createBlogResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "blog_route.listBlogsResponse": {
            "type": "object",
            "properties": {
                "blogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/blog_route.createBlogResponse"
                    }
                }
            }
        },
        "blog_route.singleBlogResponse": {
            "type": "object",
            "properties": {
                "blog": {
                    "type": "object",
                    "$ref": "#/definitions/sqlc.Blog"
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "sqlc.Blog": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "descriptions": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userRole": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}